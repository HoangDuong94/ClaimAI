This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
.cdsrc.json
.gitignore
app/app/annotations.cds
app/app/package.json
app/app/README.md
app/app/ui5.yaml
app/app/webapp/Component.js
app/app/webapp/i18n/i18n.properties
app/app/webapp/index.html
app/app/webapp/manifest.json
app/app/webapp/test/flpSandbox.html
app/app/webapp/test/integration/FirstJourney.js
app/app/webapp/test/integration/opaTests.qunit.html
app/app/webapp/test/integration/opaTests.qunit.js
app/app/webapp/test/integration/pages/StammtischeList.js
app/app/webapp/test/integration/pages/StammtischeObjectPage.js
app/app/webapp/test/integration/pages/TeilnehmerObjectPage.js
app/app/webapp/test/testsuite.qunit.html
app/app/webapp/test/testsuite.qunit.js
app/services.cds
db/data/sap.stammtisch-Praesentatoren.csv
db/data/sap.stammtisch-Stammtische.csv
db/schema.cds
eslint.config.mjs
package.json
README.md
srv/ai-service.js
srv/service.cds
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".cdsrc.json">
{
  "requires": {
    "db": {
      "kind": "postgres",
      "credentials": {
        "database": "stammtisch_ai_db",
        "user": "duh",
        "password": "test123",
        "host": "localhost", 
        "port": 5432        
      }
    }
  }
}
</file>

<file path=".gitignore">
# CAP StammtischAI
_out
*.db
*.sqlite
connection.properties
default-*.json
.cdsrc-private.json
gen/
node_modules/
target/

# Web IDE, App Studio
.che/
.gen/

# MTA
*_mta_build_tmp
*.mtar
mta_archives/

# Other
.DS_Store
*.orig
*.log

*.iml
*.flattened-pom.xml

# IDEs
# .vscode
# .idea

# @cap-js/cds-typer
@cds-models
</file>

<file path="app/app/annotations.cds">
using StammtischService as service from '../../srv/service';
annotate service.Stammtische with @(
    UI.FieldGroup #GeneratedGroup : {
        $Type : 'UI.FieldGroupType',
        Data : [
            {
                $Type : 'UI.DataField',
                Label : 'thema',
                Value : thema,
            },
            {
                $Type : 'UI.DataField',
                Label : 'datum',
                Value : datum,
            },
            {
                $Type : 'UI.DataField',
                Label : 'ort',
                Value : ort,
            },
            {
                $Type : 'UI.DataField',
                Label : 'notizen',
                Value : notizen,
            },
        ],
    },
    UI.Facets : [
        {
            $Type : 'UI.ReferenceFacet',
            ID : 'GeneratedFacet1',
            Label : 'General Information',
            Target : '@UI.FieldGroup#GeneratedGroup',
        },
    ],
    UI.LineItem : [
        {
            $Type : 'UI.DataField',
            Label : 'thema',
            Value : thema,
        },
        {
            $Type : 'UI.DataField',
            Label : 'datum',
            Value : datum,
        },
        {
            $Type : 'UI.DataField',
            Label : 'ort',
            Value : ort,
        },
        {
            $Type : 'UI.DataField',
            Label : 'notizen',
            Value : notizen,
        },
    ],
);

annotate service.Stammtische with {
    praesentator @Common.ValueList : {
        $Type : 'Common.ValueListType',
        CollectionPath : 'Praesentatoren',
        Parameters : [
            {
                $Type : 'Common.ValueListParameterInOut',
                LocalDataProperty : praesentator_ID,
                ValueListProperty : 'ID',
            },
            {
                $Type : 'Common.ValueListParameterDisplayOnly',
                ValueListProperty : 'name',
            },
            {
                $Type : 'Common.ValueListParameterDisplayOnly',
                ValueListProperty : 'email',
            },
            {
                $Type : 'Common.ValueListParameterDisplayOnly',
                ValueListProperty : 'linkedin',
            },
        ],
    }
};
</file>

<file path="app/app/package.json">
{
  "name": "app",
  "version": "0.0.1",
  "description": "SAP Stammtisch",
  "keywords": [
    "ui5",
    "openui5",
    "sapui5"
  ],
  "main": "webapp/index.html",
  "dependencies": {},
  "devDependencies": {
    "@ui5/cli": "^3.0.0",
    "@sap/ux-ui5-tooling": "1"
  },
  "scripts": {
    "deploy-config": "npx -p @sap/ux-ui5-tooling fiori add deploy-config cf"
  }
}
</file>

<file path="app/app/README.md">
## Application Details
|               |
| ------------- |
|**Generation Date and Time**<br>Sun May 18 2025 13:33:29 GMT+0200 (Mitteleurop√§ische Sommerzeit)|
|**App Generator**<br>SAP Fiori Application Generator|
|**App Generator Version**<br>1.17.5|
|**Generation Platform**<br>CLI|
|**Template Used**<br>List Report Page V4|
|**Service Type**<br>Local Cap|
|**Service URL**<br>http://localhost:4004/service/stammtisch/|
|**Module Name**<br>app|
|**Application Title**<br>Stammtisch Verwaltung|
|**Namespace**<br>sap.stammtisch.ui|
|**UI5 Theme**<br>sap_horizon|
|**UI5 Version**<br>1.136.0|
|**Enable Code Assist Libraries**<br>False|
|**Enable TypeScript**<br>False|
|**Add Eslint configuration**<br>False|
|**Main Entity**<br>Stammtische|
|**Navigation Entity**<br>teilnehmer|

## app

SAP Stammtisch

### Starting the generated app

-   This app has been generated using the SAP Fiori tools - App Generator, as part of the SAP Fiori tools suite.  In order to launch the generated app, simply start your CAP project and navigate to the following location in your browser:

http://localhost:4004/app/webapp/index.html

#### Pre-requisites:

1. Active NodeJS LTS (Long Term Support) version and associated supported NPM version.  (See https://nodejs.org)
</file>

<file path="app/app/ui5.yaml">
# yaml-language-server: $schema=https://sap.github.io/ui5-tooling/schema/ui5.yaml.json

specVersion: "3.1"
metadata:
  name: sap.stammtisch.ui.app
type: application
server:
  customMiddleware:
    - name: fiori-tools-proxy
      afterMiddleware: compression
      configuration:
        ignoreCertError: false # If set to true, certificate errors will be ignored. E.g. self-signed certificates will be accepted
        ui5:
          path:
            - /resources
            - /test-resources
          url: https://sapui5.hana.ondemand.com
    - name: fiori-tools-appreload
      afterMiddleware: compression
      configuration:
        port: 35729
        path: webapp
        delay: 300
</file>

<file path="app/app/webapp/Component.js">
sap.ui.define(
    ["sap/fe/core/AppComponent"],
    function (Component) {
        "use strict";

        return Component.extend("sap.stammtisch.ui.app.Component", {
            metadata: {
                manifest: "json"
            }
        });
    }
);
</file>

<file path="app/app/webapp/i18n/i18n.properties">
# This is the resource bundle for sap.stammtisch.ui.app

#Texts for manifest.json

#XTIT: Application name
appTitle=Stammtisch Verwaltung

#YDES: Application description
appDescription=SAP Stammtisch
</file>

<file path="app/app/webapp/index.html">
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Stammtisch Verwaltung</title>
    <style>
        html, body, body > div, #container, #container-uiarea {
            height: 100%;
        }
    </style>
    <script
        id="sap-ui-bootstrap"
        src="https://sapui5.hana.ondemand.com/1.136.0/resources/sap-ui-core.js"
        data-sap-ui-theme="sap_horizon"
        data-sap-ui-resourceroots='{
            "sap.stammtisch.ui.app": "./"
        }'
        data-sap-ui-oninit="module:sap/ui/core/ComponentSupport"
        data-sap-ui-compatVersion="edge"
        data-sap-ui-async="true"
        data-sap-ui-frameOptions="trusted"
    ></script>
</head>
<body class="sapUiBody sapUiSizeCompact" id="content">
    <div
        data-sap-ui-component
        data-name="sap.stammtisch.ui.app"
        data-id="container"
        data-settings='{"id" : "sap.stammtisch.ui.app"}'
        data-handle-validation="true"
    ></div>
</body>
</html>
</file>

<file path="app/app/webapp/manifest.json">
{
  "_version": "1.65.0",
  "sap.app": {
    "id": "sap.stammtisch.ui.app",
    "type": "application",
    "i18n": "i18n/i18n.properties",
    "applicationVersion": {
      "version": "0.0.1"
    },
    "title": "{{appTitle}}",
    "description": "{{appDescription}}",
    "resources": "resources.json",
    "sourceTemplate": {
      "id": "@sap/generator-fiori:lrop",
      "version": "1.17.5",
      "toolsId": "2418c640-e786-47b9-ad94-903960b6e258"
    },
    "dataSources": {
      "mainService": {
        "uri": "/service/stammtisch/",
        "type": "OData",
        "settings": {
          "annotations": [],
          "odataVersion": "4.0"
        }
      }
    }
  },
  "sap.ui": {
    "technology": "UI5",
    "icons": {
      "icon": "",
      "favIcon": "",
      "phone": "",
      "phone@2": "",
      "tablet": "",
      "tablet@2": ""
    },
    "deviceTypes": {
      "desktop": true,
      "tablet": true,
      "phone": true
    }
  },
  "sap.ui5": {
    "flexEnabled": true,
    "dependencies": {
      "minUI5Version": "1.136.0",
      "libs": {
        "sap.m": {},
        "sap.ui.core": {},
        "sap.fe.templates": {}
      }
    },
    "contentDensities": {
      "compact": true,
      "cozy": true
    },
    "models": {
      "i18n": {
        "type": "sap.ui.model.resource.ResourceModel",
        "settings": {
          "bundleName": "sap.stammtisch.ui.app.i18n.i18n"
        }
      },
      "": {
        "dataSource": "mainService",
        "preload": true,
        "settings": {
          "operationMode": "Server",
          "autoExpandSelect": true,
          "earlyRequests": true
        }
      },
      "@i18n": {
        "type": "sap.ui.model.resource.ResourceModel",
        "uri": "i18n/i18n.properties"
      }
    },
    "resources": {
      "css": []
    },
    "routing": {
      "config": {},
      "routes": [
        {
          "pattern": ":?query:",
          "name": "StammtischeList",
          "target": "StammtischeList"
        },
        {
          "pattern": "Stammtische({key}):?query:",
          "name": "StammtischeObjectPage",
          "target": "StammtischeObjectPage"
        },
        {
          "pattern": "Stammtische({key})/teilnehmer({key2}):?query:",
          "name": "TeilnehmerObjectPage",
          "target": "TeilnehmerObjectPage"
        }
      ],
      "targets": {
        "StammtischeList": {
          "type": "Component",
          "id": "StammtischeList",
          "name": "sap.fe.templates.ListReport",
          "options": {
            "settings": {
              "contextPath": "/Stammtische",
              "variantManagement": "Page",
              "navigation": {
                "Stammtische": {
                  "detail": {
                    "route": "StammtischeObjectPage"
                  }
                }
              },
              "controlConfiguration": {
                "@com.sap.vocabularies.UI.v1.LineItem": {
                  "tableSettings": {
                    "type": "ResponsiveTable"
                  }
                }
              }
            }
          }
        },
        "StammtischeObjectPage": {
          "type": "Component",
          "id": "StammtischeObjectPage",
          "name": "sap.fe.templates.ObjectPage",
          "options": {
            "settings": {
              "editableHeaderContent": false,
              "contextPath": "/Stammtische",
              "navigation": {
                "teilnehmer": {
                  "detail": {
                    "route": "TeilnehmerObjectPage"
                  }
                }
              }
            }
          }
        },
        "TeilnehmerObjectPage": {
          "type": "Component",
          "id": "TeilnehmerObjectPage",
          "name": "sap.fe.templates.ObjectPage",
          "options": {
            "settings": {
              "editableHeaderContent": false,
              "contextPath": "/Stammtische/teilnehmer"
            }
          }
        }
      }
    }
  },
  "sap.fiori": {
    "registrationIds": [],
    "archeType": "transactional"
  }
}
</file>

<file path="app/app/webapp/test/flpSandbox.html">
<!DOCTYPE HTML>
<html lang="en">
<!-- Copyright (c) 2015 SAP AG, All Rights Reserved -->
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{appTitle}}</title>

    <!-- Bootstrap the unified shell in sandbox mode for standalone usage.

         The renderer is specified in the global Unified Shell configuration object "sap-ushell-config".

         The fiori2 renderer will render the shell header allowing, for instance,
         testing of additional application setting buttons.

         The navigation target resolution service is configured in a way that the empty URL hash is
         resolved to our own application.

         This example uses relative path references for the SAPUI5 resources and test-resources;
         it might be necessary to adapt them depending on the target runtime platform.
         The sandbox platform is restricted to development or demo use cases and must NOT be used
         for productive scenarios.
    -->
    <script type="text/javascript">
        window["sap-ushell-config"] = {
            defaultRenderer: "fiori2",
            bootstrapPlugins: {
                "RuntimeAuthoringPlugin": {
                    component: "sap.ushell.plugins.rta",
                    config: {
                        validateAppVersion: false
                    }
                }
            },
            renderers: {
                fiori2: {
                    componentData: {
                        config: {
                            search: "hidden",
                            enableSearch: false
                        }
                    }
                }
            },
            applications: {
                "sapstammtischuiapp-tile": {
                    title: "Stammtisch Verwaltung",
                    description: "SAP Stammtisch",
                    additionalInformation: "SAPUI5.Component=sap.stammtisch.ui.app",
                    applicationType: "URL",
                    url: "../"
                }
            }
        };
    </script>

    <script src="https://sapui5.hana.ondemand.com/1.136.0/test-resources/sap/ushell/bootstrap/sandbox.js" id="sap-ushell-bootstrap"></script>
    <!-- Bootstrap the UI5 core library. 'data-sap-ui-frameOptions="allow"'' is a NON-SECURE setting for test environments -->
    <script id="sap-ui-bootstrap"
        src="https://sapui5.hana.ondemand.com/1.136.0/resources/sap-ui-core.js"
        data-sap-ui-libs=""
        data-sap-ui-async="true"
        data-sap-ui-preload="async"
        data-sap-ui-theme="sap_horizon"
        data-sap-ui-compatVersion="edge"
        data-sap-ui-language="en"
        data-sap-ui-resourceroots='{"sap.stammtisch.ui.app": "../"}'
        data-sap-ui-frameOptions="allow"
        data-sap-ui-flexibilityServices='[{"connector": "LocalStorageConnector"}]'>
    </script>
    <script>
        sap.ui.getCore().attachInit(function () {
            sap.ushell.Container.createRenderer().placeAt("content");
        });
    </script>
</head>

<!-- UI Content -->

<body class="sapUiBody" id="content">
</body>

</html>
</file>

<file path="app/app/webapp/test/integration/FirstJourney.js">
sap.ui.define([
    "sap/ui/test/opaQunit"
], function (opaTest) {
    "use strict";

    var Journey = {
        run: function() {
            QUnit.module("First journey");

            opaTest("Start application", function (Given, When, Then) {
                Given.iStartMyApp();

                Then.onTheStammtischeList.iSeeThisPage();

            });


            opaTest("Navigate to ObjectPage", function (Given, When, Then) {
                // Note: this test will fail if the ListReport page doesn't show any data
                
                When.onTheStammtischeList.onFilterBar().iExecuteSearch();
                
                Then.onTheStammtischeList.onTable().iCheckRows();

                When.onTheStammtischeList.onTable().iPressRow(0);
                Then.onTheStammtischeObjectPage.iSeeThisPage();

            });

            opaTest("Teardown", function (Given, When, Then) { 
                // Cleanup
                Given.iTearDownMyApp();
            });
        }
    }

    return Journey;
});
</file>

<file path="app/app/webapp/test/integration/opaTests.qunit.html">
<!DOCTYPE html>
<html>
<head>
    <title>Integration tests</title>
    <meta charset="utf-8">

    <script id="sap-ui-bootstrap"
            src="/resources/sap-ui-core.js"
            data-sap-ui-theme='sap_fiori_3'
            data-sap-ui-resourceroots='{
                "sap.stammtisch.ui.app": "../../"
            }'
            data-sap-ui-animation="false"
            data-sap-ui-compatVersion="edge"
            data-sap-ui-async="true">
    </script>

    <link rel="stylesheet" type="text/css" href="/resources/sap/ui/thirdparty/qunit-2.css">

    <script src="/resources/sap/ui/thirdparty/qunit-2.js"></script>
    <script src="/resources/sap/ui/qunit/qunit-junit.js"></script>

    <script src="opaTests.qunit.js"></script>

</head>
<body>
    <div id="qunit"></div>
    <div id="qunit-fixture"></div>
</body>
</html>
</file>

<file path="app/app/webapp/test/integration/opaTests.qunit.js">
sap.ui.require(
    [
        'sap/fe/test/JourneyRunner',
        'sap/stammtisch/ui/app/test/integration/FirstJourney',
		'sap/stammtisch/ui/app/test/integration/pages/StammtischeList',
		'sap/stammtisch/ui/app/test/integration/pages/StammtischeObjectPage',
		'sap/stammtisch/ui/app/test/integration/pages/TeilnehmerObjectPage'
    ],
    function(JourneyRunner, opaJourney, StammtischeList, StammtischeObjectPage, TeilnehmerObjectPage) {
        'use strict';
        var JourneyRunner = new JourneyRunner({
            // start index.html in web folder
            launchUrl: sap.ui.require.toUrl('sap/stammtisch/ui/app') + '/index.html'
        });

       
        JourneyRunner.run(
            {
                pages: { 
					onTheStammtischeList: StammtischeList,
					onTheStammtischeObjectPage: StammtischeObjectPage,
					onTheTeilnehmerObjectPage: TeilnehmerObjectPage
                }
            },
            opaJourney.run
        );
    }
);
</file>

<file path="app/app/webapp/test/integration/pages/StammtischeList.js">
sap.ui.define(['sap/fe/test/ListReport'], function(ListReport) {
    'use strict';

    var CustomPageDefinitions = {
        actions: {},
        assertions: {}
    };

    return new ListReport(
        {
            appId: 'sap.stammtisch.ui.app',
            componentId: 'StammtischeList',
            contextPath: '/Stammtische'
        },
        CustomPageDefinitions
    );
});
</file>

<file path="app/app/webapp/test/integration/pages/StammtischeObjectPage.js">
sap.ui.define(['sap/fe/test/ObjectPage'], function(ObjectPage) {
    'use strict';

    var CustomPageDefinitions = {
        actions: {},
        assertions: {}
    };

    return new ObjectPage(
        {
            appId: 'sap.stammtisch.ui.app',
            componentId: 'StammtischeObjectPage',
            contextPath: '/Stammtische'
        },
        CustomPageDefinitions
    );
});
</file>

<file path="app/app/webapp/test/integration/pages/TeilnehmerObjectPage.js">
sap.ui.define(['sap/fe/test/ObjectPage'], function(ObjectPage) {
    'use strict';

    var CustomPageDefinitions = {
        actions: {},
        assertions: {}
    };

    return new ObjectPage(
        {
            appId: 'sap.stammtisch.ui.app',
            componentId: 'TeilnehmerObjectPage',
            contextPath: '/Stammtische/teilnehmer'
        },
        CustomPageDefinitions
    );
});
</file>

<file path="app/app/webapp/test/testsuite.qunit.html">
<!DOCTYPE html>
<html>
  <head>
    <title>QUnit test suite</title>
    <script src="../resources/sap/ui/qunit/qunit-redirect.js"></script>
    <script src="testsuite.qunit.js" data-sap-ui-testsuite></script>
  </head>
  <body></body>
</html>
</file>

<file path="app/app/webapp/test/testsuite.qunit.js">
window.suite = function() {
    'use strict';

    // eslint-disable-next-line
    var oSuite = new parent.jsUnitTestSuite(),
    
    sContextPath = location.pathname.substring(0, location.pathname.lastIndexOf('/') + 1);
    oSuite.addTestPage(sContextPath + 'integration/opaTests.qunit.html');

    return oSuite;
};
</file>

<file path="app/services.cds">
using from './app/annotations';
</file>

<file path="db/data/sap.stammtisch-Praesentatoren.csv">
ID;name;email;linkedin
p1;Max Mustermann;max@example.com;linkedin.com/in/maxmustermann
p2;Erika Beispiel;erika@example.com;linkedin.com/in/erikabeispiel
</file>

<file path="db/data/sap.stammtisch-Stammtische.csv">
ID;thema;datum;ort;praesentator_ID
a1b2c3d4-e5f6-7890-1234-567890abcdef;Einf√ºhrung in CAP;2023-10-26T19:00:00Z;SAP Walldorf WDF01;p1
b2c3d4e5-f6a7-8901-2345-67890abcdef0;AI mit SAP BTP;2023-11-15T18:30:00Z;Online;p2
</file>

<file path="db/schema.cds">
namespace sap.stammtisch; 

using { cuid, managed, temporal } from '@sap/cds/common';

entity Praesentatoren : cuid, managed {
    name          : String(100) not null;
    email         : String;
    linkedin      : String;
    stammtische   : Composition of many Stammtische
                      on stammtische.praesentator = $self;
}

entity Stammtische : cuid, managed { // cuid, managed und temporal f√ºr Standardfelder
    key ID            : UUID @(Core.Computed : true); // Auto-generierte UUID
    thema         : String(255) not null;
    datum         : DateTime not null;
    ort           : String(100);
    notizen       : LargeString;
    praesentator  : Association to Praesentatoren;
    teilnehmer    : Composition of many Teilnehmer
                      on teilnehmer.stammtisch = $self;
}

entity Teilnehmer : cuid, managed {
    key ID            : UUID @(Core.Computed : true);
    name          : String(100) not null;
    email         : String;
    stammtisch    : Association to Stammtische;
}
</file>

<file path="eslint.config.mjs">
import cds from '@sap/cds/eslint.config.mjs'
export default [ ...cds.recommended ]
</file>

<file path="package.json">
{
  "name": "StammtischAI",
  "version": "1.0.0",
  "description": "A simple CAP project.",
  "repository": "<Add your repository here>",
  "license": "ISC",
  "dependencies": {
    "@cap-js/postgres": "^1",
    "@sap/cds": "^8.9.4",
    "cap-llm-plugin": "^1.5.0",
    "cds-pg": "^0.1.36",
    "express": "^4",
    "pg": "^8"
  },
  "devDependencies": {
    "@cap-js/sqlite": "^1"
  },
  "scripts": {
    "start": "cds-serve",
    "watch-app": "cds watch --open app/webapp/index.html?sap-ui-xx-viewCache=false"
  },
  "cds": {
    "requires": {
      "db": {
        "kind": "postgres",
        "impl": "@cap-js/postgres",
        "[development]": {
          "credentials": {
            "host": "localhost",
            "port": 5432,
            "database": "stammtisch_ai_db",
            "user": "duh",
            "password": "test123"
          }
        }
      },
      "auth": {
        "kind": "mocked"
      },
      "destinations": true,
      "cap-llm-plugin": true,
      "gen-ai-hub": {
        "claude-3.5": {
          "destinationName": "GenAIHubDestination",
          "deploymentUrl": "/v2/inference/deployments/dfddf56cb9d349b0",
          "resourceGroup": "default",
          "apiVersion": "2024-08-06",
          "modelName": "anthropic--claude-3.5-sonnet"
        }
      },
      "GenAIHubDestination": {
        "kind": "rest",
        "credentials": {
          "destination": "aicore-destination",
          "requestTimeout": "300000"
        }
      }
    },
    "features": {
      "fetch_csrf": true
    }
  },
  "sapux": [
    "app/app"
  ]
}
</file>

<file path="README.md">
# Getting Started

Welcome to your new project.

It contains these folders and files, following our recommended project layout:

File or Folder | Purpose
---------|----------
`app/` | content for UI frontends goes here
`db/` | your domain models and data go here
`srv/` | your service models and code go here
`package.json` | project metadata and configuration
`readme.md` | this getting started guide


## Next Steps

- Open a new terminal and run `cds watch`
- (in VS Code simply choose _**Terminal** > Run Task > cds watch_)
- Start adding content, for example, a [db/schema.cds](db/schema.cds).


## Learn More

Learn¬†more¬†at¬†https://cap.cloud.sap/docs/get-started/.
</file>

<file path="srv/ai-service.js">
const cds = require('@sap/cds');
 module.exports = cds.service.impl(async function () {
  // Connect to cap-llm-plugin service
  console.log("test prompt2");  
  this.on('callClaude', async (req) => {
    try {
      console.log("test prompt");  
      const capllmplugin = await cds.connect.to("cap-llm-plugin"); 

      const { prompt } = req.data;
        if (!prompt) {
            req.error(400, 'Prompt is required');
            return;
        }
      
      // Get chat model configuration
      const CHAT_MODEL = "claude-3.5";
      const chatModelConfig = cds.env.requires["gen-ai-hub"]?.[CHAT_MODEL];
      
      if (!chatModelConfig) {
        throw new Error(`Chat model configuration for ${CHAT_MODEL} not found`);
      }

      // Create chat request payload
      const payload = {
        anthropic_version: "bedrock-2023-05-31",
        max_tokens: 100,
        messages: [{
          role: "user",
          content: prompt || "Hello, Claude" // Use query if provided
        }]
      };
      
      const response = await capllmplugin.getChatCompletionWithConfig(
        chatModelConfig,
        payload
      );

      console.log("----------- RAW LLM RESPONSE FROM PLUGIN -----------");
      console.log(JSON.stringify(response, null, 2));
      console.log("--------------------------------------------------");
      
      return response?.choices?.[0]?.message?.content || JSON.stringify(response);

    } catch (error) {
      console.error('Error testing prompt:', error);
      console.error('Detailed error:', JSON.stringify(error, null, 2));
      throw new Error(`AI request failed: ${error.message}`);
    }
  });
});
</file>

<file path="srv/service.cds">
using { sap.stammtisch as StammtischModel } from '../db/schema'; 
using { StammtischAIHandler as AiService } from './ai-service';

service StammtischService @(path: '/service/stammtisch') { 

    @odata.draft.enabled // Aktiviere Draft-Modus f√ºr diese Entit√§t
    entity Stammtische    as projection on StammtischModel.Stammtische;

    entity Praesentatoren as projection on StammtischModel.Praesentatoren;
    entity Teilnehmer     as projection on StammtischModel.Teilnehmer;

    action callClaude (prompt: String) returns { response: String };

}
</file>

</files>
